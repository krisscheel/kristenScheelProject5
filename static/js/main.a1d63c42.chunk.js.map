{"version":3,"sources":["firebase.js","Header.js","Counter.js","DishOptions.js","DishForm.js","ListDishes.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Header","class","Component","Counter","props","setState","type","servings","this","appetizers","appetizer","salads","salad","mains","main","desserts","dessert","dishes","i","DishOptions","enoughServings","dishType","value","disabled","label","DishForm","handleNameChangeEvent","event","name","target","handleDishChangeEvent","dish","handleSubmit","addDish","state","dietaryRestrictions","preventDefault","handleDietaryChange","restrictions","checked","push","filter","restriction","selectDishType","numServings","onSubmit","maxlength","onChange","required","id","for","includes","ListDishes","renderDietaryRestrictions","join","console","log","length","map","singleDish","key","onClick","deleteDish","Footer","App","fetchDishes","database","ref","on","snapshot","data","val","dishesArray","propertyName","dishObject","dishId","child","remove","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a1d63c42.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/database';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCV6MxKgqcAYlaavVFCzRQwwfhh4aUcvp4\",\n  authDomain: \"kristen-scheel-project5.firebaseapp.com\",\n  databaseURL: \"https://kristen-scheel-project5.firebaseio.com\",\n  projectId: \"kristen-scheel-project5\",\n  storageBucket: \"kristen-scheel-project5.appspot.com\",\n  messagingSenderId: \"233635611396\",\n  appId: \"1:233635611396:web:f58311c363c48f20c4c651\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <div class=\"headBox\">\n        <h1>Potluck</h1>\n        <h2>Friday, August 28, 2020</h2>\n        <h2>Fairmont Park</h2>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n    this.setState ({type: \"appetizer\"});\n  }\n\n  render() {\n    const servings = this.props.servings; \n    let appetizers = servings.appetizer;\n    let salads = servings.salad;\n    let mains = servings.main;\n    let desserts = servings.dessert;\n\n    const dishes = this.props.dishes;\n    for (let i in this.props.dishes) {\n      if (dishes[i].type == \"appetizer\") {\n        appetizers = appetizers - 1;\n      } else if (dishes[i].type == \"salad\") {\n        salads = salads - 1;\n      } else if (dishes[i].type == \"main\") {\n        mains = mains - 1;\n      } else if (dishes[i].type == \"dessert\") {\n        desserts = desserts - 1;\n      }\n    }\n\n    return (\n    <div class=\"counter\">\n      <h2>Sign Up To Bring a Dish</h2>\n      <h3>We need: {appetizers} appetizers, {salads} salads, {mains} mains & {desserts} desserts.</h3>\n    </div>\n    )\n  }\n}\n\nexport default Counter; ","import React, { Component } from 'react';\n\nclass DishOptions extends Component {\nrender() {\n  if (this.props.enoughServings(this.props.dishType)) {\n    return (\n      <option value={this.props.dishType} disabled>{this.props.label}</option>\n      );\n  } else {\n    return (\n      <option value={this.props.dishType}>{this.props.label}</option>\n      );\n    }  \n  }\n}\n\nexport default DishOptions;\n\n","import React, { Component } from 'react';\nimport Counter from './Counter';\nimport DishOptions from './DishOptions';\n\nclass DishForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { name: '', dish: '', type: 'chooseOne', dietaryRestrictions: [] };\n  }\n\n  handleNameChangeEvent = (event) => {\n    this.setState({ name: event.target.value });\n  }\n\n  handleDishChangeEvent = (event) => {\n    this.setState({ dish: event.target.value });\n  }\n\n  handleSubmit = (event) => {\n    this.props.addDish(this.state.name, this.state.dish, this.state.type, this.state.dietaryRestrictions);\n    event.preventDefault();\n    this.setState({\n      name: \"\",\n      dish: \"\",\n      type: \"chooseOne\",\n      dietaryRestrictions: []\n    })\n  }\n\n  handleDietaryChange = (event) => {\n    let restrictions = [...this.state.dietaryRestrictions];\n\n    if (event.target.checked) {\n      restrictions.push(event.target.value);\n    } else {\n      restrictions = restrictions.filter((restriction) => {return restriction != event.target.value});\n    }\n\n    this.setState({ \n      dietaryRestrictions: restrictions\n    });\n  }\n  \n  selectDishType = (event) => {\n    this.setState({ type: event.target.value });\n  }\n\n  enoughServings = (dishType) => {\n    let numServings = this.props.servings[dishType];\n\n    const dishes = this.props.dishes;\n    for (let i in dishes) {\n      if (dishes[i].type == dishType) {\n        numServings = numServings - 1;\n      }\n    }\n    return numServings == 0;\n  }\n\n  render() {\n    return (\n      <div class=\"formBox\">\n        <div class=\"box formBoxInterior wrapper\">\n          <Counter dishes={this.props.dishes} servings={this.props.servings} />\n          <form class=\"dishForm\" onSubmit={this.handleSubmit}>\n            <div class=\"formTop\">\n              <label class=\"formLabel formLabelTop\">Name: <input class=\"inputBox\" type=\"text\" name=\"name\" maxlength=\"20\" value={this.state.name} onChange={this.handleNameChangeEvent} required/></label>\n              <label class=\"formLabel formLabelTop\">Dish: <input class=\"inputBox\" type=\"text\" name=\"dish\" maxlength=\"30\" value={this.state.dish} onChange={this.handleDishChangeEvent} required/></label>\n            </div>\n            <select class=\"dishTypeSelect\" id=\"dishType\" name=\"Type\" value={this.state.type} onChange={this.selectDishType} required>\n              <option value=\"chooseOne\" disabled>select a category</option>\n              <DishOptions enoughServings={this.enoughServings} dishType={\"appetizer\"} label={\"Appetizer\"}/>\n              <DishOptions enoughServings={this.enoughServings} dishType={\"salad\"} label={\"Salad\"} />\n              <DishOptions enoughServings={this.enoughServings} dishType={\"main\"} label={\"Main\"} />\n              <DishOptions enoughServings={this.enoughServings} dishType={\"dessert\"} label={\"Dessert\"} /> \n            </select>\n            <div class=\"checkboxes\">\n              <h3>Check all that apply to your dish:</h3>\n              <div class=\"formLabel\">\n                <label for=\"nut-free\">nut-free </label><input type=\"checkbox\" id=\"nut-free\" name=\"nut-free\" value=\"nut-free\" onChange={this.handleDietaryChange} checked={this.state.dietaryRestrictions.includes(\"nut-free\")}/>\n              </div>\n              <div class=\"formLabel\">\n                <label for=\"vegan\">vegan </label><input type=\"checkbox\" id=\"vegan\" name=\"vegan\" value=\"vegan\" onChange={this.handleDietaryChange} checked={this.state.dietaryRestrictions.includes(\"vegan\")}/>\n              </div>\n              <div class=\"formLabel\">\n                <label for=\"vegetarian\">vegetarian </label><input type=\"checkbox\" id=\"vegetarian\" name=\"vegetarian\" value=\"vegetarian\" onChange={this.handleDietaryChange} checked={this.state.dietaryRestrictions.includes(\"vegetarian\")}/>\n              </div>\n              <div class=\"formLabel\">\n                <label for=\"gluten-free\">gluten-free </label><input type=\"checkbox\" id=\"gluten-free\" name=\"gluten-free\" value=\"gluten-free\" onChange={this.handleDietaryChange} checked={this.state.dietaryRestrictions.includes(\"gluten-free\")}/>\n              </div>\n              <input class=\"submitButton\" type=\"submit\" value=\"Submit\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default DishForm; ","import React, { Component } from 'react';\n\nclass ListDishes extends Component {\n  constructor(props) {\n    super(props);\n    console.log(props);\n  }\n\n  renderDietaryRestrictions = (restrictions) => {\n    return restrictions.join(\", \");\n  }\n\n  render() {\n    return (\n      <div class=\"whatTheyreBringing\">\n          <div class=\"box whatBringingBox wrapper\">\n          <h2>Here's What Everyone's Bringing:</h2>\n          <ul>\n            {\n              (this.props.dishes.length == 0) ? <h3> No dishes yet. Be the first to sign up!</h3> :\n              this.props.dishes.map((singleDish) => {\n                return (  \n                      <li key={singleDish.id}>{singleDish.name}: {singleDish.dish} ({this.renderDietaryRestrictions(singleDish.restrictions)}) <button onClick={ () => this.props.deleteDish(singleDish.id)}>Remove dish</button>\n                      </li>\n                )\n              })\n            }\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ListDishes;\n","import React, { Component } from 'react'; \n\nclass Footer extends Component {\n  render() {\n    return (\n      <div class=\"footerBox\">\n        <p>Copyright 2020 Kristen Scheel</p>\n        <p>Juno College</p>\n      </div>\n    )\n  }\n}\n\n  export default Footer;","import React, { Component } from 'react';\nimport firebase from './firebase';\nimport './App.css';\nimport Header from './Header';\nimport DishForm from './DishForm';\nimport ListDishes from './ListDishes';\nimport Footer from './Footer';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    const servings = {\n      appetizer: 5,\n      salad: 5, \n      main: 5,\n      dessert: 5\n    };\n\n    this.state = {\n      dishes: [],\n      servings: servings\n    }\n  }\n\n  componentDidMount() {\n    this.fetchDishes();\n  }\n\n  fetchDishes = () => {\n    const dbRef = firebase.database().ref();\n\n    dbRef.on('value', (snapshot) => {\n      const data = snapshot.val();\n      const dishesArray = [];\n\n      for (let propertyName in data) {\n        const restrictions = data[propertyName][\"restrictions\"] == null ? [] : data[propertyName][\"restrictions\"];\n        const dishObject = {\n          id: propertyName,\n          name: data[propertyName][\"name\"],\n          dish: data[propertyName][\"dish\"],\n          type: data[propertyName][\"type\"],\n          restrictions: restrictions\n        }\n        dishesArray.push(dishObject);\n      }\n\n      this.setState({\n        dishes: dishesArray\n      })\n    })\n  }\n\n  deleteDish = (dishId) => {\n    const dbRef = firebase.database().ref();\n    dbRef.child(dishId).remove();\n  }\n\n  addDish = (name, dish, type, dietaryRestrictions ) => {\n    const dbRef = firebase.database().ref();\n    dbRef.push({ name: name, dish: dish, type: type, restrictions: dietaryRestrictions });\n    this.fetchDishes();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <DishForm addDish={this.addDish} dishes={this.state.dishes} servings={this.state.servings}/>\n        <ListDishes dishes={this.state.dishes} deleteDish={this.deleteDish}/>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}